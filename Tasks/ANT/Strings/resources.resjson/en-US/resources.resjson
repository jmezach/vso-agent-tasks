// *******************************************************
// GENERATED FILE - DO NOT EDIT DIRECTLY
// *******************************************************
{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[More Information](http://go.microsoft.com/fwlink/?LinkID=613718)",
  "loc.description": "Build with Apache Ant",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "JUnit Test Results",
  "loc.group.displayName.codeCoverage": "Code Coverage",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.antBuildFile": "Ant build file",
  "loc.input.help.antBuildFile": "Relative path from the repository root to the `Ant build file`.",
  "loc.input.label.options": "Options",
  "loc.input.label.targets": "Target(s)",
  "loc.input.label.publishJUnitResults": "Publish to VSO/TFS",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit Test results produced by the Ant build to VSO/TFS. Each test result file matching `Test Results Files` will be published as a test run in VSO/TFS.",
  "loc.input.label.testResultsFiles": "Test Results Files",
  "loc.input.help.testResultsFiles": "Test results files path.  Wildcards can be used.  For example, `**/TEST-*.xml` for all xml files whose name starts with TEST-.",
  "loc.input.label.codeCoverageTool": "Code Coverage Tool",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool. Please make sure jacocoant.jar is available in lib folder of Ant installation.",
  "loc.input.label.classfilesDirectory": "Class Files Directory",
  "loc.input.help.classfilesDirectory": "Comma separated list of directories containing class files, archive files(jar, war etc.). Directories and archives are searched recursively for class files. Code coverage is reported for class files present in the directories. For example, classes1/Tests,classes2/Tests2. Refer http://www.eclemma.org/jacoco/trunk/doc/ant.html.",
  "loc.input.label.classFilter": "Class Inclusion/Exclusion Filters",
  "loc.input.help.classFilter": "Comma separated list of filters to include or exclude classes from collecting code coverage. For example, +:com.*,+:org.*,-:my.app*.*. Refer http://www.eclemma.org/jacoco/trunk/doc/ant.html.",
  "loc.input.label.srcDirectory": "Source Files Directory",
  "loc.input.help.srcDirectory": "Specify source directory for code coverage reports to include highlighted source code. For example, src. Refer http://www.eclemma.org/jacoco/trunk/doc/ant.html.",
  "loc.input.label.javaHomeSelection": "Set JAVA_HOME by",
  "loc.input.help.javaHomeSelection": "Sets JAVA_HOME either by selecting a JDK version that will be discovered during builds or by manually entering a JDK path.",
  "loc.input.label.jdkVersion": "JDK Version",
  "loc.input.help.jdkVersion": "Will attempt to discover the path to the selected JDK version and set JAVA_HOME accordingly.",
  "loc.input.label.jdkUserInputPath": "JDK Path",
  "loc.input.help.jdkUserInputPath": "Sets JAVA_HOME to the given path.",
  "loc.input.label.jdkArchitecture": "JDK Architecture",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of JDK."
}